---
- hosts: nodes
  become: true
  tasks:
    - name: transparent masquerading 1
      shell: 'modprobe br_netfilter'
      args:
        chdir: /home/ansible

    - name: transparent masquerading 2
      shell: 'firewall-cmd --add-masquerade --permanent'
      args:
        chdir: /home/ansible

    - name: transparent masquerading 3
      shell: 'firewall-cmd --reload'
      args:
        chdir: /home/ansible
        
    - name: traficc through firewall 1
      shell:
        cmd: |
          cat <<EOF > /etc/sysctl.d/k8s.conf
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          EOF
      args:
        executable: /bin/bash

    - name: traficc through firewall 2
      shell: 'sysctl --system'
      args:
        chdir: /home/ansible

    - name: install dependences
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

    - name: key GPG
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: docker repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: install docker
      apt:
        name: "{{item}}"
        state: latest
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: activate docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: add Kubernetes apt-key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: add Kubernetes' APT repository
      apt_repository:
       repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
       state: present
       filename: 'kubernetes'

    - name: install kubelet
      apt:
        name: kubelet
        state: present
        update_cache: true

    - name: activate kubelet
      service:
        name: kubelet
        state: started
        enabled: yes

    - name: install kubeadm
      apt:
        name: kubeadm
        state: present
        
- hosts: master
  become: yes
  tasks:
    - name: install kubectl
      apt:
        name: kubectl
        state: present
        force: yes        

    - name: master firewall 1
      shell: 'firewall-cmd --permanent --add-port=6443/tcp'
      args:
        chdir: /home/ansible
      
    - name: master firewall 2
      shell: 'firewall-cmd --permanent --add-port=2379-2380/tcp'
      args:
        chdir: /home/ansible
      
    - name: master firewall 3
      shell: 'firewall-cmd --permanent --add-port=10250/tcp'
      args:
        chdir: /home/ansible
      
    - name: master firewall 4
      shell: 'firewall-cmd --permanent --add-port=10251/tcp'
      args:
        chdir: /home/ansible
      
    - name: master firewall 5
      shell: 'firewall-cmd --permanent --add-port=10252/tcp'
      args:
        chdir: /home/ansible
      
    - name: master firewall 6
      shell: 'firewall-cmd --permanent --add-port=10255/tcp'
      args:
        chdir: /home/ansible
      
    - name: master firewall 7
      shell: 'firewall-cmd --reload'
      args:
        chdir: /home/ansible

    - name: configurar kubeadm
      shell: 'kubeadm config images pull'
      args:
        chdir: /home/ansible

    - name: Permitir acceso desde worker1
      shell: "firewall-cmd --permanent --add-rich-rule 'rule family=ipv4 source address=10.0.1.11/32 accept'"
      args:
        chdir: /home/ansible

    - name: Permitir acceso desde worker2
      shell: "firewall-cmd --permanent --add-rich-rule 'rule family=ipv4 source address=10.0.1.12/32 accept'"
      args:
        chdir: /home/ansible
        
    - name: master firewall 8
      shell: 'firewall-cmd --reload'
      args:
        chdir: /home/ansible
        
    - name: master firewall 9
      shell: "firewall-cmd --zone=public --permanent --add-rich-rule 'rule family=ipv4 source address=172.17.0.0/16 accept'"
      args:
        chdir: /home/ansible
        
    - name: master firewall 10
      shell: 'firewall-cmd --reload'
      args:
        chdir: /home/ansible

        
      
